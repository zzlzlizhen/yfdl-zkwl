<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.remote.modules.device.dao.DeviceMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.remote.modules.device.entity.DeviceEntity" id="BaseResultMap">
        <result property="deviceId" column="device_id"/>
        <result property="deviceCode" column="device_code"/>
        <result property="deviceName" column="device_name"/>
        <result property="projectId" column="project_id"/>
        <result property="groupId" column="group_id"/>
        <result property="groupName" column="group_name"/>
        <result property="deviceType" column="device_type"/>
        <result property="deviceTypeName" column="device_type_name"/>
        <result property="photocellState" column="photocell_state"/>
        <result property="batteryState" column="battery_state"/>
        <result property="loadState" column="load_state"/>
        <result property="loadState" column="load_state"/>
        <result property="signalState" column="signal_state"/>
        <result property="runState" column="run_state"/>
        <result property="light" column="light"/>
        <result property="communicationType" column="communication_type"/>
        <result property="onOff" column="on_off"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
        <result property="isDel" column="is_del"/>
        <result property="createUser" column="create_user"/>
        <result property="createName" column="create_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
        <result property="counts" column="counts"/>
        <result property="batteryMargin" column="battery_margin"/>
        <result property="batteryVoltage" column="battery_voltage"/>
        <result property="photovoltaicCellVoltage" column="photovoltaic_cell_voltage"/>
        <result property="chargingCurrent" column="charging_current"/>
        <result property="chargingPower" column="charging_power"/>
        <result property="loadVoltage" column="load_voltage"/>
        <result property="loadPower" column="load_power"/>
        <result property="loadCurrent" column="load_current"/>
        <result property="lightingDuration" column="lighting_duration"/>
        <result property="morningHours" column="morning_hours"/>
        <result property="cityName" column="city_name"/>
        <result property="version" column="version"/>
        <result property="deviceVersion" column="device_version"/>

    </resultMap>

    <sql id="Base_Column_List" >
    device_id, device_code,device_name, group_id, device_type, photocell_state, battery_state,load_state,signal_state,
    run_state,light,communication_type,on_off,longitude,latitude,is_del,create_user,create_name,create_time,
    update_user,update_time,project_id,battery_margin,battery_voltage,photovoltaic_cell_voltage,charging_current,
    charging_power,load_voltage,load_power,load_current,lighting_duration,morning_hours,city_name,version,group_name,device_type_name
    </sql>
    <select id="queryDevice" parameterType="com.remote.modules.device.entity.DeviceQuery" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        fun_device
        <where>
            is_del = 0
            <if test="deviceQuery.runState !=null and deviceQuery.runState!=''">
                AND run_state = #{deviceQuery.runState}
            </if>
            <if test="deviceQuery.groupId !=null and deviceQuery.groupId!=''">
                AND group_id = #{deviceQuery.groupId}
            </if>
            <if test="deviceQuery.projectId !=null and deviceQuery.projectId!=''">
                AND project_id = #{deviceQuery.projectId}
            </if>
            <if test="deviceQuery.deviceCode !=null and deviceQuery.deviceCode!=''">
                AND device_code LIKE CONCAT('%', #{deviceQuery.deviceCode}, '%')
            </if>
            <if test="deviceQuery.deviceName !=null and deviceQuery.deviceName!=''">
                AND device_name LIKE CONCAT('%', #{deviceQuery.deviceName}, '%')
            </if>
            <if test="deviceQuery.deviceType !=null and deviceQuery.deviceType!=''">
                AND device_type = #{deviceQuery.deviceType}
            </if>
            <if test="deviceQuery.noRunState !=null and deviceQuery.noRunState!=''">
                AND run_state != #{deviceQuery.noRunState}
            </if>
        </where>
    </select>

    <select id="queryDeviceByGroupIdTopOne" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        fun_device
        <where>
            is_del = 0
            and group_id = #{groupId} limit 0,1
        </where>
    </select>

    <select id="queryDeviceByDeviceId" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        fun_device
        <where>
            is_del = 0
            AND device_id =#{deviceId}
        </where>
    </select>

    <select id="queryDeviceByDeviceIds" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        fun_device
        <where>
            is_del = 0
            <if test="deviceIds !=null and deviceIds.size()!= 0">
                and device_id in
                <foreach collection="deviceIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>


    <select id="queryDeviceGroupByCity" resultType="java.util.HashMap" >
        SELECT
        city_name,count(1) as counts
        FROM
        fun_device
        <where>
            is_del = 0
            <if test="userIds !=null and userIds.size()!= 0">
                and create_user in
                <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        group by city_name
    </select>

    <update id="deleteDevice" parameterType="com.remote.modules.device.entity.DeviceQuery">
        update fun_device set
        <if test="deviceQuery.groupId != null">
            group_id = #{deviceQuery.groupId},
        </if>
        <if test="deviceQuery.isDel != null">
            is_del = #{deviceQuery.isDel},
        </if>
        <if test="deviceQuery.groupName != null">
            group_name = #{deviceQuery.groupName},
        </if>
        update_user = #{deviceQuery.updateUser},update_time = #{deviceQuery.updateTime}
        <where>
            <if test="deviceQuery.deviceList !=null and deviceQuery.deviceList.size()!= 0">
                and device_id in
                <foreach collection="deviceQuery.deviceList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="updateUserDevice" parameterType="com.remote.modules.device.entity.DeviceQuery">
        update fun_device set
        create_user = #{deviceQuery.createUser},
        update_user = #{deviceQuery.updateUser},update_time = #{deviceQuery.updateTime}
        <where>
            <if test="deviceQuery.deviceList !=null and deviceQuery.deviceList.size()!= 0">
                and device_id in
                <foreach collection="deviceQuery.deviceList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="updateDeviceRunStatus">
        update fun_device set
        run_state = 5
        <where>
            1 = 1
            <if test="deviceCodes !=null and deviceCodes.size()!= 0">
                and device_code in
                <foreach collection="deviceCodes" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>


    <update id="updateOnOffByIds" parameterType="com.remote.modules.device.entity.DeviceQuery">
        update fun_device set
        <if test="deviceQuery.onOff != null">
            on_off = #{deviceQuery.onOff},
        </if>
        <if test="deviceQuery.light != null">
            light = #{deviceQuery.light},
        </if>
        <if test="deviceQuery.lightingDuration != null">
            lighting_duration = #{deviceQuery.lightingDuration},
        </if>
        <if test="deviceQuery.morningHours != null">
            morning_hours = #{deviceQuery.morningHours},
        </if>
        update_user = #{deviceQuery.updateUser},update_time = now()
        <where>
         1 =1
            <if test="deviceQuery.deviceList !=null and deviceQuery.deviceList.size()!= 0">
                and device_id in
                <foreach collection="deviceQuery.deviceList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>


    <update id="updateById" parameterType="com.remote.modules.device.entity.DeviceEntity">
      update fun_device
        <set>
            <if test="deviceCode != null">
                device_code = #{deviceCode},
            </if>
            <if test="deviceName != null">
                device_name = #{deviceName},
            </if>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="deviceType != null">
                device_type = #{deviceType},
            </if>
            <if test="photocellState != null">
                gateway_count = #{photocellState},
            </if>
            <if test="photocellState != null">
                photocell_state = #{photocellState},
            </if>
            <if test="batteryState != null">
                battery_state = #{batteryState},
            </if>
            <if test="loadState != null">
                load_state = #{loadState},
            </if>
            <if test="signalState != null">
                signal_state = #{signalState},
            </if>
            <if test="runState != null">
                run_state = #{runState},
            </if>
            <if test="light != null">
                light = #{light},
            </if>
            <if test="onOff != null">
                on_off = #{onOff},
            </if>
            <if test="longitude != null">
                longitude = #{longitude},
            </if>
            <if test="latitude != null">
                latitude = #{latitude},
            </if>
            <if test="isDel != null">
                is_del = #{isDel},
            </if>
            <if test="batteryMargin != null">
                battery_margin = #{batteryMargin},
            </if>
            <if test="batteryVoltage != null">
                battery_voltage = #{batteryVoltage},
            </if>
            <if test="photovoltaicCellVoltage != null">
                photovoltaic_cell_voltage = #{photovoltaicCellVoltage},
            </if>
            <if test="chargingCurrent != null">
                charging_current = #{chargingCurrent},
            </if>
            <if test="chargingPower != null">
                charging_power = #{chargingPower},
            </if>
            <if test="loadVoltage != null">
                load_voltage = #{loadVoltage},
            </if>
            <if test="loadPower != null">
                load_power = #{loadPower},
            </if>
            <if test="loadCurrent != null">
                load_current = #{loadCurrent},
            </if>
            <if test="lightingDuration != null">
                lighting_duration = #{lightingDuration},
            </if>
            <if test="morningHours != null">
                morning_hours = #{morningHours},
            </if>

            update_user = #{updateUser},
            update_time = now()
        </set>
        where device_id = #{deviceId}
    </update>

    <select id="queryDeviceByProjectCount" resultMap="BaseResultMap" >
       select
          project_id,count(1) as counts from fun_device
        where
        is_del = 0
        <if test="projectIds !=null and projectIds.size()!= 0">
            and project_id in
            <foreach collection="projectIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="deviceStatus != 0">
            and run_state = #{deviceStatus}
        </if>
        group by project_id
    </select>

    <select id="queryDeviceByGroupCount" resultMap="BaseResultMap" >
        select
            group_id,count(1) as counts from fun_device
        where
        is_del = 0
        <if test="groupIds !=null and groupIds.size()!= 0">
            and group_id in
            <foreach collection="groupIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="projectId !=null and projectId != ''">
            and project_id = #{projectId}
        </if>
        <if test="deviceStatus != 0">
            and run_state = #{deviceStatus}
        </if>
        group by group_id
    </select>


    <select id="queryRunStateCount"  resultMap="BaseResultMap" >
        select run_state,count(1) as counts from fun_device where is_del = 0
        <if test="projectId !=null and projectId != ''">
            and project_id = #{projectId}
        </if>
        <if test="groupId !=null and groupId != ''">
            and group_id = #{groupId}
        </if>
        group by run_state
    </select>

    <select id="queryByDevCode" resultType="java.lang.String">
        select group_id from fun_device where device_code=#{deviceCode} group by device_code
    </select>
    <select id="queryByGroupId" resultType="java.lang.String">
        select device_code from fun_device where group_id=#{groupId}
    </select>
    <select id="getDeviceCount" resultType="java.lang.Integer">
        select count(device_id) from fun_device where is_del = 0
        <if test="userIds !=null and userIds.size()!= 0">
          and create_user in
            <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getDevFailNum" resultType="java.lang.Integer">
        select count(device_id) from fun_device where run_state = 3 and is_del = 0
        <if test="userIds !=null and userIds.size()!= 0">
            and create_user in
            <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getDeviceCode" resultType="java.lang.String">
        select device_code as deviceCode from fun_device where is_del = 0
        <if test="userIds !=null and userIds.size()!= 0">
            and create_user in
            <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getDeviceInfoList" resultType="java.util.HashMap">
        select longitude,latitude  from fun_device where is_del = 0
        <if test="userIds !=null and userIds.size()!= 0">
            and create_user in
            <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>


    <select id="getDeviceByDeviceCode" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1) from fun_device where is_del = 0
         <if test="deviceCode!=null and deviceCode!=''">
             and device_code = #{deviceCode}
         </if>
    </select>
</mapper>
